@model ProductVM

<div class="card shadow border-0 mt-4">
	<div class=" card-header bg-secondary bg-gradient ml-0 py-3">
		<div class="row">
			<div class="col-12 text-center">
				<h2 class="text-white py-2"> @(Model.Product.Id!=0?"Update":"Create") Product </h2>
			</div>
		</div>
	</div>
	<div class="card-body p-4">
		<form method="post" class="row" enctype="multipart/form-data">
			<input asp-for="Product.Id" hidden/>
			@* <input asp-for="Product.ImageUrl" hidden/> *@
			<div class="row">
				<div class="col-10">
					<div class="border p-3">
						<div asp-validation-summary="ModelOnly"></div>
						<div class="mb-3 row">
							<label asp-for="Product.Title"></label>
							<input asp-for="Product.Title" class="form-control" />
							<span asp-validation-for="Product.Title" class="text-danger"></span>
						</div>
						<div class="mb-3 row">
							<label asp-for="Product.Description" class="ms-2 text-muted"></label>
							<textarea asp-for="Product.Description" class="form-control "></textarea>
							@* <span asp-validation-for="Product.Description" class="text-danger"></span> *@
						</div>
						<div class="mb-3 row">
							<label asp-for="Product.ISBN"></label>
							<input asp-for="Product.ISBN" class="form-control" />
							<span asp-validation-for="Product.ISBN" class="text-danger"></span>
						</div>
						<div class="mb-3 row">
							<label asp-for="Product.Author"></label>
							<input asp-for="Product.Author" class="form-control" />
							<span asp-validation-for="Product.Author" class="text-danger"></span>
						</div>
						<div class="mb-3 row">
							<label asp-for="Product.ListPrice"></label>
							<input asp-for="Product.ListPrice" class="form-control" />
							<span asp-validation-for="Product.ListPrice" class="text-danger"></span>
						</div>
						<div class="mb-3 row">
							<label asp-for="Product.Price"></label>
							<input asp-for="Product.Price" class="form-control" />
							<span asp-validation-for="Product.Price" class="text-danger"></span>
						</div>
						<div class="mb-3 row">
							<label asp-for="Product.Price50"></label>
							<input asp-for="Product.Price50" class="form-control" />
							<span asp-validation-for="Product.Price50" class="text-danger"></span>
						</div>
						<div class="mb-3 row">
							<label asp-for="Product.Price100"></label>
							<input asp-for="Product.Price100" class="form-control" />
							<span asp-validation-for="Product.Price100" class="text-danger"></span>
						</div>
						<div class="mb-3 row">
							<label asp-for="Product.Category_Id"></label>
							@* <select asp-for="Category_Id" asp-items="ViewBag.CategoryList" class="form-select"> *@
							@* <select asp-for="Product.Category_Id" asp-items="@(ViewData["CategoryList"] as IEnumerable<SelectListItem>)" class="form-select"> *@
							<select asp-for="Product.Category_Id" asp-items="@Model.CategoryList" class="form-select">
								<option disabled selected>--Select Category--</option>
							</select>
							<span asp-validation-for="Product.Category_Id" class="text-danger"></span>
						</div>
						<div class="mb-3 row">
							<label asp-for="Product.ProductImages"></label>
							<input type="file" name="files" class="form-control" multiple/>
						</div>
						@if (Model.Product.Id != 0)
						{
							<button type="submit" class="btn btn-primary" style="width:100px"> Update </button>

						}
						else
						{
							<button type="submit" class="btn btn-primary" style="width:100px"> Create </button>

						}
						<a asp-controller="Product" asp-action="Index" class="btn-secondary" style="width:100px; margin-left:50px">Back To List</a>
					</div>
				</div>
				<div class="col-2">
					@if(Model.Product.ProductImages != null)
					{
						foreach (var image in Model.Product.ProductImages)
						{
							<div class="border pbg-opacity-1 m-2 text-center">
								<img src="@image.ImageUrl" width="100%" alt="Book Image"
									 style="border-radius: 5px; border: 1px solid #bbb9b9;" />
								<a asp-action="DeleteImage" class="btn btn-danger" asp-route-imageId="@image.Id">
									<i class="bi bi-trash-fill"></i>Delete
								</a>
							</div>
						}
					}
					@*  *@
				</div>
			</div>
		</form>
	</div>
</div>



@section Scripts{
	<script>
		tinymce.init({
		  selector: 'textarea',
		  plugins: [
			// Core editing features
			'anchor', 'autolink', 'charmap', 'codesample', 'emoticons',  'lists', 'table', 'visualblocks', 'wordcount',
			// Your account includes a free trial of TinyMCE premium features
			// Try the most popular premium features until Jun 6, 2025:
			//'checklist', 'mediaembed', 'casechange', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
		  ],
		  toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent |',
		  tinycomments_mode: 'embedded',
		  tinycomments_author: 'Author name',
		  mergetags_list: [
			{ value: 'First.Name', title: 'First Name' },
			{ value: 'Email', title: 'Email' },
		  ],
		  ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
		});
	</script>
	@{
		<partial name="_ValidationScriptsPartial" />
	}
}